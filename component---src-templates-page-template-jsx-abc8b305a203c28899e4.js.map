{"version":3,"sources":["webpack:///./src/components/Page/Page.jsx","webpack:///./src/templates/page-template.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/SEO/SEO.jsx","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["Page","_ref","postNode","slug","post","frontmatter","id","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","html","__webpack_require__","d","__webpack_exports__","pageQuery","PageTemplate","data","pageContext","tagList","categoryList","latestPostEdges","markdownRemark","title","content","components_Page_Page","sidebar","Sidebar","links","config","sidebarLinks","layout","Helmet_default","siteTitle","SEO","postPath","postSEO","Header","MainContainer","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","replace","i","component","TypeError","push","str","join","parts","split","normalize","arguments","slice","call","module","exports","undefined","render","description","keywords","postURL","_this$props","this","props","image","postMeta","excerpt","cover","childImageSharp","fixed","src","urljoin","siteUrl","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","type","JSON","stringify","property","siteFBAppID","userTwitter","Component","createHTML","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","NAME","exec","O","P","F","test","toLowerCase"],"mappings":"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","file":"component---src-templates-page-template-jsx-abc8b305a203c28899e4.js","sourcesContent":["import React from \"react\";\n\nconst Page = ({ postNode, slug }) => {\n  const post = postNode.frontmatter;\n  if (!post.id) {\n    post.id = slug;\n  }\n\n  return (\n    <div className=\"page-container\">\n      <div \n        className=\"padding-top padding-bottom\" \n        dangerouslySetInnerHTML={{ __html: postNode.html }} \n      />\n    </div>\n  )\n}\n\nexport default Page;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport Page from \"../components/Page/Page\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nconst PageTemplate = ({ data, pageContext }) => {\n  const { slug, tagList, categoryList, latestPostEdges } = pageContext;\n  const postNode = data.markdownRemark;\n  const title = postNode.frontmatter.title;\n  const content = <Page postNode={postNode} slug={slug} />;\n  const sidebar = <Sidebar \n    tagList={tagList} \n    categoryList={categoryList}\n    latestPostEdges={latestPostEdges} \n    links={config.sidebarLinks}\n  />;\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`${title} - ${config.siteTitle}`}</title>\n      </Helmet>\n      <SEO postPath={slug} postNode={postNode} postSEO />\n      <Header title={title} />\n      <MainContainer content={content} sidebar={sidebar} />\n    </Layout>\n  );\n}\n\nexport default PageTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        description\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords\n\n      if (postMeta.cover) {\n        image = postMeta.cover.childImageSharp.fixed.src;\n      }\n\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}